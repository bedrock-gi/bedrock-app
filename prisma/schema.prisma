generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

generator zod {
  provider = "zod-prisma-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userProjects UserProject[]
}

model UserProject {
  role       Role
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  project    Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  String
  agsUploads AgsUpload[]

  @@id([userId, projectId])
}

model Project {
  id   String @id @default(uuid())
  name String

  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  locations    Location[]
  userProjects UserProject[]

  columnDefinitions ColumnDefinition[]
}

enum Role {
  OWNER
  ADMIN
  VIEWER
  EDITOR
}

model Location {
  id                       String    @id @default(uuid())
  name                     String
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  project                  Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId                String
  latitude                 Float?
  longitude                Float?
  customColumns            Json?
  // Additional fields based on AGS data format
  locationType             String? // Text listed in ABBR Group Abbreviations
  locationStatus           String? // Text listed in ABBR Group Abbreviations
  nationalEasting          Float? // nDP Value with required number of decimal places
  nationalNorthing         Float? // nDP Value with required number of decimal places
  gridReference            String? // Text listed in ABBR group
  groundLevel              Float? // nDP Value with required number of decimal places
  remarks                  String? // Text Abbreviations
  finalDepth               Float? // nDP Value with required number of decimal places
  startDate                DateTime? // Date time in international format
  purpose                  String? // Text listed in ABBR Group Abbreviations
  termination              String? // Text listed in ABBR Group Abbreviations
  endDate                  DateTime? // Date time in international format
  gridReferenceLetter      String? // Text Abbreviations
  localGridX               Float? // nDP Value with required number of decimal places
  localGridY               Float? // nDP Value with required number of decimal places
  localDatumLevel          Float? // nDP Value with required number of decimal places
  localGridSystem          String? // Text listed in ABBR Group Abbreviations
  localDatumSystem         String? // Text listed in ABBR Group Abbreviations
  endOfTraverseEasting     Float? // nDP Value with required number of decimal places
  endOfTraverseNorthing    Float? // nDP Value with required number of decimal places
  endOfTraverseGroundLevel Float? // nDP Value with required number of decimal places
  localGridEasting         Float? // nDP Value with required number of decimal places
  localGridNorthing        Float? // nDP Value with required number of decimal places
  localElevation           Float? // nDP Value with required number of decimal places

  latitudeEnd             String? // DMS Degrees:Minutes:Seconds
  longitudeEnd            String? // DMS Degrees:Minutes:Seconds
  projectionFormat        String? // Text
  locationMethod          String? // Text listed in ABBR Group Abbreviations
  locationSubdivision     String? // Text listed in ABBR Group Abbreviations
  phaseGrouping           String? // Text listed in ABBR Group Abbreviations
  alignmentId             String? // Text listed in ABBR Group Abbreviations
  offset                  Float? // nDP Value with required number of decimal places
  chainage                String? // Text
  transformDetails        String? // Text
  associatedFileReference String? // Text
  nationalDatum           String? // Text listed in ABBR Group Abbreviations
  originalHoleId          String? // Text
  originalJobReference    String? // Text
  originatingCompany      String? // Text
}

model Sample {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ColumnDefinition {
  id        String   @id @default(uuid())
  columnId  String
  tableId   String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  label     String
  dataType  DataType
}

enum DataType {
  STRING
  NUMBER
}

enum AgsUploadStatus {
  VALIDATED
  CANCELLED
  FAILED
  COMPLETED
  STARTED
}

model AgsUpload {
  id                  String          @id @default(uuid())
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  userProject         UserProject     @relation(fields: [userId, projectId], references: [userId, projectId])
  userId              String
  projectId           String
  fileUrl             String?
  parsedRecordsUrl    String?
  status              AgsUploadStatus
  newRecordsCount     Int?
  updatedRecordsCount Int?
}

// model LabTest {
//   id            String   @id @default(uuid())
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   customColumns Json
// }
